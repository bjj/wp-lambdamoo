#include "ast.h"
#include "config.h"
#include "exceptions.h"

extern void markup_stmts(Stmt * top);

#define TYPEMASK_INDEXABLE	(TYPEMASK(TYPE_LIST)|TYPEMASK(TYPE_STR))
#define TYPEMASK_GTLTABLE	(TYPEMASK(TYPE_INT)|TYPEMASK(TYPE_STR)|TYPEMASK(TYPE_FLOAT)|TYPEMASK(TYPE_OBJ)|TYPEMASK(TYPE_ERR))
#define TYPEMASK_MATHABLE	(TYPEMASK(TYPE_INT)|TYPEMASK(TYPE_FLOAT))
#define TYPEMASK_ADDABLE	(TYPEMASK_MATHABLE|TYPEMASK(TYPE_STR))
#define TYPEMASK_TIMER		TYPEMASK(TYPE_INT)
#define TYPEMASK_HASPROPS	TYPEMASK(TYPE_OBJ) /* XXX WAIF */
#define TYPEMASK_HASVERBS	TYPEMASK(TYPE_OBJ) /* XXX WAIF */
#define TYPEMASK_ANY		(~0)
#define TYPEMASK_NONE		(0)
#define TYPEMASK_COMPLEX	(TYPEMASK(TYPE_STR)|TYPEMASK(TYPE_LIST)|TYPEMASK(TYPE_FLOAT))
#define TYPEMASK_OKTRUE		(TYPEMASK(TYPE_INT)|TYPEMASK(TYPE_FLOAT)|TYPEMASK(TYPE_STR)|TYPEMASK(TYPE_LIST)) /* XXX WAIF */

/* XXX this is a fake TYPE_ ala TYPE_NUMERIC/TYPE_ANY */
#define TYPE_LISTORSTR		((var_type) -30)

#define TYPEMASK(x)	(1 << (x & TYPE_DB_MASK))
/* equivalent to "is a power of 2?" */
#define TYPEMASK_IS_EXACT(mask)		((((mask) - 1) & (mask)) == 0)
#define TYPEMASK_IS_ANYTHING(mask)	((~(mask) & 0xffff) == 0)
